<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="638.5417px" preserveAspectRatio="none" style="width:406px;height:638px;background:#333333;" version="1.1" viewBox="0 0 406 638" width="406.25px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="393.75" x="2.0833" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="370.8333" x="13.5417" y="30.5583">com.telenav.kivakit.core.logging.logs</text><!--MD5=[1c38f4b24c2a8cc40df1b1f481d76b9f]
class Startable--><rect codeLine="7" fill="#282828" height="48.055" id="Startable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="94.7917" x="40.3646" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="94.7917" x="40.3646" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="94.7917" x="40.3646" y="76.7578"/><rect codeLine="7" fill="none" height="48.055" id="Startable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="94.7917" x="40.3646" y="53.7028"/><ellipse cx="54.9479" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M52.3519,66.5588 L52.3519,64.9719 L57.7779,64.9719 L57.7779,66.5588 L55.9652,66.5588 L55.9652,72.4976 L57.7779,72.4976 L57.7779,74.0845 L52.3519,74.0845 L52.3519,72.4976 L54.1646,72.4976 L54.1646,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="57.2917" x="71.6146" y="74.1211">Startable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="41.4063" x2="134.1146" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="41.4063" x2="134.1146" y1="93.4245" y2="93.4245"/><!--MD5=[063d74e43144aaa0d0cf3aecd3794497]
class Log--><rect codeLine="8" fill="#282828" height="48.055" id="Log" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="61.4583" x="171.6146" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="61.4583" x="171.6146" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="61.4583" x="171.6146" y="76.7578"/><rect codeLine="8" fill="none" height="48.055" id="Log" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="61.4583" x="171.6146" y="53.7028"/><ellipse cx="186.1979" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M183.6019,66.5588 L183.6019,64.9719 L189.0279,64.9719 L189.0279,66.5588 L187.2152,66.5588 L187.2152,72.4976 L189.0279,72.4976 L189.0279,74.0845 L183.6019,74.0845 L183.6019,72.4976 L185.4146,72.4976 L185.4146,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="23.9583" x="202.8646" y="74.1211">Log</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="172.6563" x2="232.0313" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="172.6563" x2="232.0313" y1="93.4245" y2="93.4245"/><!--MD5=[02d8e9e1cff711f67da7e3a29e67b3ab]
class Stoppable--><rect codeLine="9" fill="#282828" height="48.055" id="Stoppable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="102.0833" x="270.0521" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="102.0833" x="270.0521" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="102.0833" x="270.0521" y="76.7578"/><rect codeLine="9" fill="none" height="48.055" id="Stoppable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="102.0833" x="270.0521" y="53.7028"/><ellipse cx="284.6354" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M282.0394,66.5588 L282.0394,64.9719 L287.4654,64.9719 L287.4654,66.5588 L285.6527,66.5588 L285.6527,72.4976 L287.4654,72.4976 L287.4654,74.0845 L282.0394,74.0845 L282.0394,72.4976 L283.8521,72.4976 L283.8521,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="64.5833" x="301.3021" y="74.1211">Stoppable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="271.0938" x2="371.0938" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="271.0938" x2="371.0938" y1="93.4245" y2="93.4245"/><!--MD5=[101b3b512dee0ab8c5f2b70bb25d7868]
class BaseLog--><rect codeLine="14" fill="#282828" height="467.9525" id="BaseLog" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="276.0417" x="64.3229" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="276.0417" x="64.3229" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="276.0417" x="64.3229" y="187.1745"/><rect codeLine="14" fill="none" height="467.9525" id="BaseLog" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="276.0417" x="64.3229" y="164.1195"/><ellipse cx="167.9688" cy="179.8136" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M167.5618,176.5157 L166.7135,180.245 L168.4163,180.245 Z M166.4632,174.8678 L168.6666,174.8678 L171.1263,183.9803 L169.3258,183.9803 L168.7642,181.7281 L166.3534,181.7281 L165.804,183.9803 L164.0035,183.9803 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="54.1667" x="190.8854" y="184.5378">BaseLog</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="65.3646" x2="339.3229" y1="195.5078" y2="195.5078"/><polygon fill="#FFFF44" points="75.7813,225.6694,79.9479,229.836,75.7813,234.0027,71.6146,229.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="87.2396" y="237.7889">BaseLog()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="65.3646" x2="158.5938" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="161.7188" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="246.0938" x2="339.3229" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="65.3646" x2="339.3229" y1="247.4976" y2="247.4976"/><ellipse cx="75.7813" cy="258.9559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="243.75" x="87.2396" y="265.8671">void asynchronous(boolean asynchronous)</text><polygon fill="#FFFF44" points="75.7813,273.4924,79.9479,277.6591,75.7813,281.8258,71.6146,277.6591" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="87.2396" y="285.612">void onLog(LogEntry)</text><polygon fill="#FFFF44" points="75.7813,293.2373,79.9479,297.404,75.7813,301.5706,71.6146,297.404" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="87.2396" y="305.3569">int retries()</text><ellipse cx="75.7813" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="147.9167" x="87.2396" y="349.0133">boolean isAsynchronous()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="65.3646" x2="175.7813" y1="324.9379" y2="324.9379"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="178.9063" y="328.7476">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="228.9063" x2="339.3229" y1="324.9379" y2="324.9379"/><ellipse cx="75.7813" cy="385.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="87.2396" y="392.6697">void addFilter(Filter&lt;LogEntry&gt;)</text><ellipse cx="75.7813" cy="405.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="87.2396" y="412.4146">void clear()</text><ellipse cx="75.7813" cy="425.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="87.2396" y="432.1594">List&lt;BaseLog&gt; logs()</text><ellipse cx="75.7813" cy="444.9931" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="210.4167" x="87.2396" y="451.9043">CountMap&lt;String&gt; messageCounts()</text><polygon fill="#FFFF44" points="75.7813,459.5296,79.9479,463.6963,75.7813,467.863,71.6146,463.6963" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="82.2917" x="87.2396" y="471.6492">int queueSize()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="65.3646" x2="167.9688" y1="368.5944" y2="368.5944"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="171.0938" y="372.404">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="236.7188" x2="339.3229" y1="368.5944" y2="368.5944"/><polygon fill="#FFFF44" points="75.7813,503.186,79.9479,507.3527,75.7813,511.5194,71.6146,507.3527" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="87.2396" y="515.3056">boolean accept(LogEntry)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="65.3646" x2="173.1771" y1="491.2303" y2="491.2303"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="176.3021" y="495.0399">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="231.5104" x2="339.3229" y1="491.2303" y2="491.2303"/><ellipse cx="75.7813" cy="552.0508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="87.2396" y="558.962">void closeOutput()</text><ellipse cx="75.7813" cy="571.7957" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="87.2396" y="578.7069">boolean isClosed()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="65.3646" x2="189.8438" y1="534.8867" y2="534.8867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="192.9688" y="538.6963">(io)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="214.8438" x2="339.3229" y1="534.8867" y2="534.8867"/><polygon fill="#FFFF44" points="75.7813,610.2437,79.9479,614.4104,75.7813,618.5771,71.6146,614.4104" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="158.3333" x="87.2396" y="622.3633">void onLogFailure(LogEntry)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="65.3646" x2="177.8646" y1="598.288" y2="598.288"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="180.9896" y="602.0976">(status)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="226.8229" x2="339.3229" y1="598.288" y2="598.288"/><!--MD5=[a9bfb9e606060ed7ee97a9c0f5d441df]
reverse link Startable to BaseLog--><path codeLine="11" d="M103.2917,121.8278 C107.6979,134.0882 112.8438,148.359 118.4167,163.8278 " fill="none" id="Startable-backto-BaseLog" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="96.3854,124.1715,96.1875,102.0986,110.1042,119.234,96.3854,124.1715" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[6cf6c29980c96a99786b940c85d53b0c]
reverse link Stoppable to BaseLog--><path codeLine="12" d="M305,121.8278 C300.4271,134.0882 295.1042,148.359 289.3229,163.8278 " fill="none" id="Stoppable-backto-BaseLog" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="298.25,119.0674,312.3646,102.0986,311.9063,124.1715,298.25,119.0674" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4d6e882370715127310817c5860ee5c2]
reverse link Log to BaseLog--><path codeLine="13" d="M202.3438,123.2132 C202.3438,135.1611 202.3438,148.9424 202.3438,163.8278 " fill="none" id="Log-backto-BaseLog" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="195.0521,122.932,202.3438,102.0986,209.6354,122.932,195.0521,122.932" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[367de020df2fc3d48aff3da26439d0c9]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.logging.logs"
    
    interface Startable
    interface Log
    interface Stoppable
    
    Startable <|- - BaseLog
    Stoppable <|- - BaseLog
    Log <|- - BaseLog
    abstract class BaseLog
    {
        - -(constructors)- -
        #BaseLog()
        - -
        +void asynchronous(boolean asynchronous)
        #void onLog(LogEntry)
        #int retries()
        - -(checks)- -
        +boolean isAsynchronous()
        - -(collection)- -
        +void addFilter(Filter<LogEntry>)
        +void clear()
        +List<BaseLog> logs()
        +CountMap<String> messageCounts()
        #int queueSize()
        - -(filtering)- -
        #boolean accept(LogEntry)
        - -(io)- -
        +void closeOutput()
        +boolean isClosed()
        - -(status)- -
        #void onLogFailure(LogEntry)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.logging.logs"
    
    interface Startable
    interface Log
    interface Stoppable
    
    Startable <|- - BaseLog
    Stoppable <|- - BaseLog
    Log <|- - BaseLog
    abstract class BaseLog
    {
        - -(constructors)- -
        #BaseLog()
        - -
        +void asynchronous(boolean asynchronous)
        #void onLog(LogEntry)
        #int retries()
        - -(checks)- -
        +boolean isAsynchronous()
        - -(collection)- -
        +void addFilter(Filter<LogEntry>)
        +void clear()
        +List<BaseLog> logs()
        +CountMap<String> messageCounts()
        #int queueSize()
        - -(filtering)- -
        #boolean accept(LogEntry)
        - -(io)- -
        +void closeOutput()
        +boolean isClosed()
        - -(status)- -
        #void onLogFailure(LogEntry)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>