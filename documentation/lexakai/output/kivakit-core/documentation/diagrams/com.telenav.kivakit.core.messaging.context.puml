
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.messaging.context"
    
    interface Sized
    interface StringFormattable
    
    class CallStack
    {
        --
        +Method callerOf(Proximity, Matching, Class<?> calleeType, Matching ignoreMatching, Class<?>... ignores)
        +Method callerOf(Proximity, Matching, Class<?> calleeType)
        --(collection)--
        +List<Method> callstack()
        +List<Method> callstack(Thread)
    }
    
    class CodeContext
    {
        --(constructors)--
        #CodeContext()
        +CodeContext(Class<?>)
        +CodeContext(Method)
        +CodeContext(String)
        --
        +Class<?> type()
        --(naming)--
        +String fullTypeName()
        +String typeName()
        --(network)--
        +String host()
        +void hostResolver(Source<String> resolver)
        --(path)--
        +PackageReference packagePath()
    }
    
    enum CallStack.Matching
    {
        EXACT
        SUBCLASS
    }
    
    enum CallStack.Proximity
    {
        DISTANT
        IMMEDIATE
    }
    
    class StackTrace.StackFrame
    {
        --(constructors)--
        #StackFrame()
        +StackFrame(StackTraceElement)
        --
        +String full()
        +String simplified()
    }
    
    Sized <|-- StackTrace
    StringFormattable <|-- StackTrace
    class StackTrace
    {
        --(constructors)--
        +StackTrace()
        +StackTrace(String, StackTraceElement[])
        +StackTrace(Throwable)
        --
        +String top()
        --(conversion)--
        +String toHtmlString()
        --(thread)--
        +Map<Thread,StackTrace> allThreads()
        +StackTrace cause()
    }
    
@enduml

