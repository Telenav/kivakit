
@startuml

    !include lexakai.theme
    
    title "diagram-logs"
    
    abstract BaseColumnarFormatter
    abstract BaseTextLog
    abstract BaseLog
    
    interface Startable
    interface Log
    interface LogFormatter
    interface Stoppable
    
    Startable <|-- BaseLog
    Stoppable <|-- BaseLog
    Log <|-- BaseLog
    abstract class BaseLog
    {
        --(constructors)--
        #BaseLog()
        --
        +void asynchronous(boolean asynchronous)
        #void onLog(LogEntry)
        #int retries()
        --(checks)--
        +boolean isAsynchronous()
        --(collection)--
        +void addFilter(Filter<LogEntry>)
        +void clear()
        +List<BaseLog> logs()
        +CountMap<String> messageCounts()
        #int queueSize()
        --(filtering)--
        #boolean accept(LogEntry)
        --(io)--
        +void closeOutput()
        +boolean isClosed()
        --(status)--
        #void onLogFailure(LogEntry)
    }
    
    BaseLog <|-- BaseTextLog
    BaseTextLog --> LogFormatter : "formats entries with"
    abstract class BaseTextLog
    {
        --
        +void formatter(LogFormatter)
        #String formatted(LogEntry)
    }
    
    BaseTextLog <|-- ConsoleLog
    class ConsoleLog
    {
    }
    
    interface Closeable
    interface Filtered
    Filtered <|-- Log
    Closeable <|-- Log
    Log --> LogEntry : "logs"
    interface Log
    {
        --
        +void configure(VariableMap<String> properties)
        +void level(Class<T> message)
        +void level(Severity)
        +void log(LogEntry)
    }
    
    interface LogFormatter
    {
        --
        +String format(LogEntry, MessageFormat... formats)
        +LogFormatter formatter()
    }
    
    BaseColumnarFormatter <|-- NarrowLogFormatter
    class NarrowLogFormatter
    {
    }
    
    LogFormatter <|-- SimpleLogFormatter
    class SimpleLogFormatter
    {
    }
    
    BaseColumnarFormatter <|-- WideLogFormatter
    class WideLogFormatter
    {
        --(time)--
        +void timeType(TimeType)
    }
    
@enduml

