<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="495.8333px" preserveAspectRatio="none" style="width:756px;height:495px;background:#333333;" version="1.1" viewBox="0 0 756 495" width="756.25px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="332.2917" x="204.9479" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="309.375" x="216.4063" y="30.5583">com.telenav.kivakit.core.object</text><!--MD5=[f7c8027e5fe893b551cd400892f8837b]
class Clearable--><rect codeLine="7" fill="#282828" height="48.055" id="Clearable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="97.9167" x="52.6042" y="130.2653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="97.9167" x="52.6042" y="130.2653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="97.9167" x="52.6042" y="153.3203"/><rect codeLine="7" fill="none" height="48.055" id="Clearable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="97.9167" x="52.6042" y="130.2653"/><ellipse cx="67.1875" cy="145.9595" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M64.5915,143.1213 L64.5915,141.5344 L70.0175,141.5344 L70.0175,143.1213 L68.2048,143.1213 L68.2048,149.0601 L70.0175,149.0601 L70.0175,150.647 L64.5915,150.647 L64.5915,149.0601 L66.4042,149.0601 L66.4042,143.1213 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60.4167" x="83.8542" y="150.6836">Clearable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="53.6458" x2="149.4792" y1="161.6536" y2="161.6536"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="53.6458" x2="149.4792" y1="169.987" y2="169.987"/><!--MD5=[47de47a8b5f06cbc5e036fae0a9149b7]
class Iterable--><rect codeLine="8" fill="#282828" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="86.4583" x="257.2917" y="130.2653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="86.4583" x="257.2917" y="130.2653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="86.4583" x="257.2917" y="153.3203"/><rect codeLine="8" fill="none" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="86.4583" x="257.2917" y="130.2653"/><ellipse cx="271.875" cy="145.9595" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M269.279,143.1213 L269.279,141.5344 L274.705,141.5344 L274.705,143.1213 L272.8923,143.1213 L272.8923,149.0601 L274.705,149.0601 L274.705,150.647 L269.279,150.647 L269.279,149.0601 L271.0917,149.0601 L271.0917,143.1213 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="288.5417" y="150.6836">Iterable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="258.3333" x2="342.7083" y1="161.6536" y2="161.6536"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="258.3333" x2="342.7083" y1="169.987" y2="169.987"/><!--MD5=[0729f9b2fb3c7896586bddd75dacdfb4]
class Lazy--><rect codeLine="11" fill="#282828" height="150.946" id="Lazy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="184.375" x="9.375" y="326.0986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="184.375" x="9.375" y="326.0986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="184.375" x="9.375" y="349.1536"/><rect codeLine="11" fill="none" height="150.946" id="Lazy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="184.375" x="9.375" y="326.0986"/><ellipse cx="56.7708" cy="341.7928" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M58.6812,346.2179 Q58.254,346.4376 57.784,346.5474 Q57.314,346.6573 56.7952,346.6573 Q54.952,346.6573 53.9815,345.4427 Q53.0111,344.2281 53.0111,341.9332 Q53.0111,339.6322 53.9815,338.4176 Q54.952,337.203 56.7952,337.203 Q57.314,337.203 57.7901,337.3128 Q58.2662,337.4227 58.6812,337.6424 L58.6812,339.6444 Q58.2174,339.2171 57.781,339.0188 Q57.3446,338.8204 56.8807,338.8204 Q55.8919,338.8204 55.3884,339.6047 Q54.8848,340.389 54.8848,341.9332 Q54.8848,343.4713 55.3884,344.2556 Q55.8919,345.0399 56.8807,345.0399 Q57.3446,345.0399 57.781,344.8415 Q58.2174,344.6431 58.6812,344.2159 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="29.1667" x="79.6875" y="346.5169">Lazy</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="43.75" x="153.125" y="322.9736"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="157.2917" y="339.2253">Value</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="192.7083" y1="357.487" y2="357.487"/><polygon fill="#FFFF44" points="20.8333,387.6485,25,391.8152,20.8333,395.9819,16.6667,391.8152" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="32.2917" y="399.7681">Lazy(Factory&lt;Value&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="57.8125" y1="375.6927" y2="375.6927"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="60.9375" y="379.5024">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="145.3125" x2="192.7083" y1="375.6927" y2="375.6927"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="192.7083" y1="409.4767" y2="409.4767"/><ellipse cx="20.8333" cy="420.9351" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="59.375" x="32.2917" y="427.8463">Value get()</text><ellipse cx="20.8333" cy="440.6799" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="32.2917" y="447.5911">boolean has()</text><ellipse cx="20.8333" cy="460.4248" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="32.2917" y="467.336">Lazy&lt;V&gt; lazy(Factory&lt;V&gt;)</text><!--MD5=[4aac78d9f0db20ae838768a56fba52bc]
class LazyMap--><rect codeLine="21" fill="#282828" height="194.6025" id="LazyMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="364.5833" x="380.7292" y="56.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="364.5833" x="380.7292" y="56.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="364.5833" x="380.7292" y="79.8828"/><rect codeLine="21" fill="none" height="194.6025" id="LazyMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="364.5833" x="380.7292" y="56.8278"/><ellipse cx="489.0625" cy="72.522" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M490.9729,76.947 Q490.5457,77.1667 490.0757,77.2766 Q489.6057,77.3865 489.0869,77.3865 Q487.2437,77.3865 486.2732,76.1719 Q485.3027,74.9573 485.3027,72.6624 Q485.3027,70.3613 486.2732,69.1467 Q487.2437,67.9321 489.0869,67.9321 Q489.6057,67.9321 490.0818,68.042 Q490.5579,68.1519 490.9729,68.3716 L490.9729,70.3735 Q490.509,69.9463 490.0726,69.7479 Q489.6362,69.5496 489.1724,69.5496 Q488.1836,69.5496 487.6801,70.3339 Q487.1765,71.1182 487.1765,72.6624 Q487.1765,74.2004 487.6801,74.9847 Q488.1836,75.769 489.1724,75.769 Q489.6362,75.769 490.0726,75.5707 Q490.509,75.3723 490.9729,74.9451 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="56.25" x="511.9792" y="77.2461">LazyMap</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="75" x="673.4375" y="53.7028"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="677.6042" y="69.9544">Key, Value</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="381.7708" x2="744.2708" y1="88.2161" y2="88.2161"/><polygon fill="#FFFF44" points="392.1875,118.3777,396.3542,122.5444,392.1875,126.711,388.0208,122.5444" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="403.6458" y="130.4972">LazyMap(Mapper&lt;Key, Value&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.7708" x2="519.2708" y1="106.4219" y2="106.4219"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="522.3958" y="110.2315">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="606.7708" x2="744.2708" y1="106.4219" y2="106.4219"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.7708" x2="744.2708" y1="140.2059" y2="140.2059"/><ellipse cx="392.1875" cy="151.6642" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="403.6458" y="158.5754">Value get(Key)</text><ellipse cx="392.1875" cy="195.3206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="403.6458" y="202.2319">void clear()</text><ellipse cx="392.1875" cy="215.0655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="332.2917" x="403.6458" y="221.9767">LazyMap&lt;Key,Value&gt; lazyMap(Mapper&lt;Key,Value&gt; factory)</text><ellipse cx="392.1875" cy="234.8104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="403.6458" y="241.7216">void remove(Key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.7708" x2="528.6458" y1="178.1565" y2="178.1565"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="531.7708" y="181.9661">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="597.3958" x2="744.2708" y1="178.1565" y2="178.1565"/><!--MD5=[220f5f32351d35cc72380e3951491ed2]
class Pair--><rect codeLine="34" fill="#282828" height="174.8576" id="Pair" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="139.5833" x="230.7292" y="314.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="139.5833" x="230.7292" y="314.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="139.5833" x="230.7292" y="337.1745"/><rect codeLine="34" fill="none" height="174.8576" id="Pair" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="139.5833" x="230.7292" y="314.1195"/><ellipse cx="272.0313" cy="329.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M273.9417,334.2387 Q273.5144,334.4584 273.0444,334.5683 Q272.5745,334.6781 272.0557,334.6781 Q270.2124,334.6781 269.2419,333.4635 Q268.2715,332.2489 268.2715,329.954 Q268.2715,327.653 269.2419,326.4384 Q270.2124,325.2238 272.0557,325.2238 Q272.5745,325.2238 273.0505,325.3337 Q273.5266,325.4435 273.9417,325.6632 L273.9417,327.6652 Q273.4778,327.238 273.0414,327.0396 Q272.605,326.8412 272.1411,326.8412 Q271.1523,326.8412 270.6488,327.6255 Q270.1453,328.4098 270.1453,329.954 Q270.1453,331.4921 270.6488,332.2764 Q271.1523,333.0607 272.1411,333.0607 Q272.605,333.0607 273.0414,332.8623 Q273.4778,332.664 273.9417,332.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="23.9583" x="294.6354" y="334.5378">Pair</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="16.6667" x="356.7708" y="310.9945"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="8.3333" x="360.9375" y="327.2461">T</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="231.7708" x2="369.2708" y1="345.5078" y2="345.5078"/><ellipse cx="242.1875" cy="380.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="253.6458" y="387.7889">Pair(T, T)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="231.7708" x2="256.7708" y1="363.7136" y2="363.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="259.8958" y="367.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="344.2708" x2="369.2708" y1="363.7136" y2="363.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="231.7708" x2="369.2708" y1="397.4976" y2="397.4976"/><ellipse cx="242.1875" cy="408.9559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="253.6458" y="415.8671">T a()</text><ellipse cx="242.1875" cy="428.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="26.0417" x="253.6458" y="435.612">T b()</text><ellipse cx="242.1875" cy="472.3572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="253.6458" y="479.2684">boolean isIdentity()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="231.7708" x2="273.9583" y1="455.1931" y2="455.1931"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="277.0833" y="459.0027">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="327.0833" x2="369.2708" y1="455.1931" y2="455.1931"/><!--MD5=[fd43d6391978abd8a9bef50a240da411]
reverse link Clearable to Lazy--><path codeLine="10" d="M101.5625,199.5465 C101.5625,234.682 101.5625,284.5882 101.5625,325.8799 " fill="none" id="Clearable-backto-Lazy" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="94.2708,199.182,101.5625,178.3486,108.8542,199.182,94.2708,199.182" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[e6a87f607348331b3e2b2fc147fbbc9f]
reverse link Iterable to Pair--><path codeLine="33" d="M300.5208,199.5882 C300.5208,231.4215 300.5208,275.359 300.5208,314.0465 " fill="none" id="Iterable-backto-Pair" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="293.2292,199.182,300.5208,178.3486,307.8125,199.182,293.2292,199.182" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[88f11b93b92bb8f97a5780c465d0592b]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.object"
    
    interface Clearable
    interface Iterable
    
    Clearable <|- - Lazy
    class Lazy<Value>
    {
        - -(constructors)- -
        #Lazy(Factory<Value>)
        - -
        +Value get()
        +boolean has()
        +Lazy<V> lazy(Factory<V>)
    }
    
    class LazyMap<Key, Value>
    {
        - -(constructors)- -
        #LazyMap(Mapper<Key, Value>)
        - -
        +Value get(Key)
        - -(collection)- -
        +void clear()
        +LazyMap<Key,Value> lazyMap(Mapper<Key,Value> factory)
        +void remove(Key)
    }
    
    Iterable <|- - Pair
    class Pair<T>
    {
        - -(constructors)- -
        +Pair(T, T)
        - -
        +T a()
        +T b()
        - -(checks)- -
        +boolean isIdentity()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.object"
    
    interface Clearable
    interface Iterable
    
    Clearable <|- - Lazy
    class Lazy<Value>
    {
        - -(constructors)- -
        #Lazy(Factory<Value>)
        - -
        +Value get()
        +boolean has()
        +Lazy<V> lazy(Factory<V>)
    }
    
    class LazyMap<Key, Value>
    {
        - -(constructors)- -
        #LazyMap(Mapper<Key, Value>)
        - -
        +Value get(Key)
        - -(collection)- -
        +void clear()
        +LazyMap<Key,Value> lazyMap(Mapper<Key,Value> factory)
        +void remove(Key)
    }
    
    Iterable <|- - Pair
    class Pair<T>
    {
        - -(constructors)- -
        +Pair(T, T)
        - -
        +T a()
        +T b()
        - -(checks)- -
        +boolean isIdentity()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>