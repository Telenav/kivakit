Diagrams:

1. Lazy instantiation with Constructor reference
2. Lazy instantiation with Factory method

------

1. Lazy instantiation with Constructor reference

@startuml

    !include ../lexakai.theme

    title "Lazy instantiation with Constructor reference"

    autoactivate on

    actor Client
    participant Lazy <<kivakit>>
    participant "lazyInstance\n:Lazy<InstanceType>" as lazyInstance <<kivakit>>
    participant "instance\n:{IntanceType}" as instance

    Client -> Lazy : of(constructor reference)

    Lazy -> lazyInstance ** : new(constructor reference)
    note right Lazy
        Java encapsulate Constructor reference
        as functional interface Factory (lambda)
        with method 'newInstance'
    end note

    return lazyInstance

    Client -> lazyInstance : get()
    lazyInstance -> lazyInstance : load()

    alt instance is null
        lazyInstance -> instance ** : new()
        note right lazyInstance
            call instance Constructor by
            method 'newInstance' of lambda
        end note
    end alt

    return
    return instance

@enduml

2. Lazy instantiation with Factory method

@startuml

    !include ../lexakai.theme

    title "Lazy instantiation with Factory method"

    autoactivate on

    actor Client
    participant Lazy <<kivakit>>
    participant "lazyInstance\n:Lazy<InstanceType>" as lazyInstance <<kivakit>>
    participant "factory\n:Factory<InstanceType>" as factory
    participant "instance\n:{IntanceType}" as instance

    Client -> factory ** : define()
    note right factory
        Factory method (lambda)
        implemented 'newInstance' of
        functional interface Factory
    end note

    Client -> Lazy : of(factory)
    Lazy -> lazyInstance ** : new(factory)
    return lazyInstance

    Client -> lazyInstance : get()
    lazyInstance -> lazyInstance : load()

    alt instance is null
        lazyInstance -> factory : newInstance()
        note right lazyInstance
            call Factory method (lambda)
            which implemented 'newInstance'
        end note
        factory -> instance ** : new()
        return instance
    end alt

    return
    return instance

@enduml
