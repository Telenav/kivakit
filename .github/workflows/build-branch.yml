#///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#
#  Â© 2022 Telenav, Inc.
#  Licensed under Apache License, Version 2.0
#
#///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#
# GitHub action that builds code on push or pull request.
#

defaults:
  run:
    shell: bash

env:
    CACTUS_V: 1.5.18

name: "Build Branch"

on:
  workflow_dispatch:
  push:
    paths-ignore:
        - 'documentation/**'
        - '**/*.md'
    branches:
      - develop
      - 'release/**'
      - feature/**'
      - 'hotfix/**'
      - '!*-wip'
  pull_request:
    branches:
      - develop
      - 'release/**'
      - feature/**'
      - 'hotfix/**'
      - '!*-wip'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      # Use an env var for the project name, so this workflow can be reused
      # for everything. Eventually we can make it a shared workflow once it's
      # sufficiently robust.
      - name: Set up PROJECT Environment
        run: echo "PROJECT=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

      - name: Set up Maven Environment
        run: WHEN=$(date '+%s') echo "MAVEN_REPO=/tmp/mr-$WHEN" >> $GITHUB_ENV

      - name: Set up MAVEN_OPTS
        run: echo "MAVEN_OPTS=\"-XX:+UseG1GC -Dmaven.repo.local=$MAVEN_REPO --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED\"" >> $GITHUB_ENV
        
      # Debug shell-quoting issues
      - name: Print MAVEN_OPTS
        run: echo $MAVEN_OPTS
        
      # Debug some more - quoting issues
      - name: Print MAVEN_OPTS
        run: cat $GITHUB_ENV

      # We need this because we will create a commit in order to ensure that when
      # The build runs, there are no local changes (cactus may check this, so a
      # consistent state is good to have)
      - name: Configure Git
        run: git config --global user.email "nobody@nowhere.com" && git config --global user.name "Nobody"

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.5

      - name: Clone Telenav-Build
        run: git clone https://github.com/Telenav/telenav-build.git

      - name: Init Submodules
        run: cd $GITHUB_WORKSPACE/telenav-build && git submodule init

      # Delete the assets submodules before we do anything, since we
      # do not need them and they are huge and will slow down the job
      # considerably.
      - name: Remove Cactus Assets Before Updating Submodules
        run: cd $GITHUB_WORKSPACE/telenav-build && git rm -f cactus-assets

      - name: Remove Kivakit Assets Before Updating Submodules
        run: cd $GITHUB_WORKSPACE/telenav-build && git rm -f kivakit-assets

      - name: Remove Lexakai Assets Before Updating Submodules
        run: cd $GITHUB_WORKSPACE/telenav-build && git rm -f lexakai-assets

      - name: Remove Mesakit Assets Before Updating Submodules
        run: cd $GITHUB_WORKSPACE/telenav-build && git rm -f mesakit-assets

      # For consistency, ensure nothing we run (such as cactus tests) will
      # detect that they are running in a modified repository
      - name: Ensure No Local Changes
        run: cd $GITHUB_WORKSPACE/telenav-build && git commit -m "----remove-assets----"

      # Now we are ready to pull git submodules
      - name: Update Submodules
        run: cd $GITHUB_WORKSPACE/telenav-build && git submodule update

      # This will fail over to the develop branch
      - name: Checkout Branch
        run: cd $GITHUB_WORKSPACE/telenav-build && mvn -Dcactus.base-branch=develop -Dcactus.fetch-first=false -Dcactus.scope=all-project-families -Dcactus.create-branches=true -Dcactus.target-branch=$GITHUB_REF_NAME -Dcactus.permit-local-changes=false -Dcactus.update-root=false -Dpush=false com.telenav.cactus:cactus-maven-plugin:$CACTUS_V:checkout

      - name: Move Project to Target Ref
        run: cd $GITHUB_WORKSPACE/telenav-build/$PROJECT && git checkout $GITHUB_REF

      - name: Build Superpoms
        run: cd $GITHUB_WORKSPACE/telenav-build && mvn --no-transfer-progress -f telenav-superpom/pom.xml

      - name: Build Target Commit
        run: cd $GITHUB_WORKSPACE/telenav-build && mvn --no-transfer-progress install
        
      - name: Clean up Maven Repo
        run: rm -Rf $MAVEN_REPO
